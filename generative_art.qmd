---
title: "Generative Art Lab"
author: "Chloe Feehan"
format: 
  html: 
    self-contained: true
    code-tools: true
    code-fold: true
    embed-resources: true
editor: visual
execute: 
  echo: true
  include: true
  message: false
  warning: false
---

```{r}
#| label: libraries

library(ggplot2)
library(scales)
library(ggthemes)
library(tibble)
```

```{r}
set.seed(1)
n <- 50
dat <- tibble(
  x0 = runif(n),
  y0 = runif(n),
  x1 = x0 + runif(n, min = -.2, max = .2),
  y1 = y0 + runif(n, min = -.2, max = .2),
  shade = runif(n), 
  size = runif(n)
)


pal <- c("darkslategray3", "aquamarine4", "cadetblue", "lightblue")


dat |>
  ggplot(aes(x = x0, y = y0,
             xend = x1, yend = y1,
             color = x0)) +
  geom_segment(show.legend = FALSE, linewidth = 30) +
  geom_point(show.legend = FALSE, size = 15, shape = 17, 
             color = "green4") +
  geom_point(show.legend = FALSE, size = 10, shape = 17, 
             color = "springgreen3") +
  geom_point(show.legend = FALSE, size = 6, shape = 17, 
             color = "lightgreen") +
  
  #coord_polar() +
  scale_y_continuous(expand = c(0, 0)) +
  scale_x_continuous(expand = c(0, 0)) + 
  scale_colour_gradientn(colours = pal) +
  scale_size(range = c(0, 10)) +
  theme_void() +
  labs(title = "Forest") +
  theme(
    plot.title = element_text(family = "Times New Roman", size = 20, 
                              face = "italic", color = "black")
  )
```

```{r}
# source: https://art-from-code.netlify.app/day-1/session-3/
show_polygon <- function(polygon, show_vertices = TRUE, ...) {
  
  pic <- ggplot(polygon, aes(x, y)) +
    geom_polygon(colour = "black", fill = NA, show.legend = FALSE, ...) + 
    coord_equal() + 
    theme_void()
  
  if(show_vertices == TRUE) {
    pic <- pic + geom_point(colour = "black", size = 2)
  }
  print(pic)
}

normalise_radius <- function(x, min, max) {
  normalize(x, from = c(-0.5, 0.5), to = c(min, max))
}
```

```{r}
diamond <- tibble(
  x = c(0.5, 1, 0.5, 0, 0.5),
  y = c(0, 0.5, 1, 0.5, 0),
  seg_len = c(1, 1, 1, 1, 0)
)
show_polygon(diamond)



```
